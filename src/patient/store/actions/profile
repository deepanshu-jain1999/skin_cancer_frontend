import * as actionTypes from './actionTypes';
import axios from '../../../axios-orders';

export const fetchProfileSuccess = (reports) => {
    return {
        type: actionTypes.FETCH_PROFILE_SUCCESS,
        profileData: profileData
    };
};

export const fetchProfileFail = (error) => {
    return {
        type: actionTypes.FETCH_PROFILE_FAIL,
        error: error
    };
};

export const fetchProfileStart = () => {
    return {
        type: actionTypes.FETCH_PROFILE_START
    };
};

export const fetchProfile = (token) => {

    return dispatch => {
        dispatch(fetchProfileStart());
        let headers = {
            "Content-Type": "application/json",
        };
        headers["Authorization"] = `Token ${token}`;
        console.log(token);
        axios.get('http://localhost:8000/api/profile.json', {headers, })
            .then(res => {
                dispatch(fetchProfileSuccess(res.data));
        })
            .catch(err => {
                dispatch(fetchProfileFail(err));
        });
    };

};

#
# export const updateProfileSuccess = (reportData) => {
#     return {
#         type: actionTypes.UPDATE_PROFILE_SUCCESS,
#         createReportData: reportData
#     };
# };
#
# export const updateProfileFail = (error) => {
#     return {
#         type: actionTypes.UPDATE_PROFILE_FAIL,
#         error: error
#     };
# };
#
# export const updateProfileStart = () => {
#     return {
#         type: actionTypes.UPDATE_PROFILE_START,
#     };
# };
#
# export const updateProfileInit = () => {
#     return {
#         type: actionTypes.UPDATE_PROFILE_INIT,
#     };
# };
#
# export const updateProfile = (reportData, token) => {
#     return dispatch => {
#          dispatch(createReportStart());
#          let headers = {
#             "Content-Type": "application/json",
#          };
#          headers["Authorization"] = `Token ${token}`;
#          axios.post('http://localhost:8000/api/report.json', reportData, {headers: headers})
#              .then(response => {
#                  dispatch(createReportSuccess(response.data))
#              })
#              .catch(error => {
#                  dispatch(createReportFail(error))
#              })
#     };
# };
